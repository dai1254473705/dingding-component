"use strict";

Component({
  mixins: [],
  data: {
    $uiName: 'input',
    // focus: false,
    valueholder: ''
  },
  props: {
    className: '',
    dmId: 'input',
    name: '',
    title: 'title',
    maxlength: '',
    autoHeight: true,
    placeholder: '',
    autoClear: false,
    rightIconSize: '32',
    value: '',
    type: 'text',
    //类型 text|multiline|number
    password: false,
    disabled: false,
    error: false,
    errorText: 'error',
    // focus: false,
    required: false,
    readOnly: false,
    onDmBlur: function onDmBlur() {},
    onDmInput: function onDmInput() {},
    onDmFocus: function onDmFocus() {},
    onDmTap: function onDmTap() {},
    onDmConfirm: function onDmConfirm() {},
    onDmClear: function onDmClear() {},
    onDmValidate: null
  },
  didMount: function didMount() {
    this.setData({
      valueholder: this.props.value
    });
  },
  didUpdate: function didUpdate(prevProps, prevData) {
    // if (this.props.focus != prevProps.focus && this.props.focus != this.data.focus) {
    //   this.setData({
    //     focus: this.props.focus
    //   })
    // }
    if (this.props.value != prevProps.value && this.props.value != this.data.valueholder) {
      this.setData({
        valueholder: this.props.value
      });
    }
  },
  methods: {
    onDmFocus: function onDmFocus(e) {
      if (this.props.onDmValidate) {
        this.setData({
          focus: true,
          error: false
        });
      } else {
        this.setData({
          focus: true
        });
      }

      this.props.onDmFocus(e, this);
    },
    onDmBlur: function onDmBlur(e) {
      var value = e.detail.value;

      if (this.props.onDmValidate) {
        var error = !this.props.onDmValidate(value, this.props);
        this.setData({
          focus: false,
          error: error
        });
      } else {
        this.setData({
          focus: false
        });
      }

      this.props.onDmBlur(e, this); //this.triggerEvent('eventBlur', e);
    },
    onDmInput: function onDmInput(e) {
      this.setData({
        valueholder: e.detail.value
      }); // this.triggerEvent('eventInput', e);

      this.props.onDmInput(e, this);
    },
    onDmTap: function onDmTap(e) {
      // if (!this.data.valueholder && !this.props.placeholder && !this.data.focus && !this.props.readOnly) {
      //   this.setData({
      //     focus: true
      //   })
      // }
      this.props.onDmTap(e, this);
    },
    onDmConfirm: function onDmConfirm(e) {
      this.props.onDmConfirm(e, this);
    },
    onDmClearHook: function onDmClearHook(e) {
      this.props.onDmClear(e, this);
      this.setData({
        valueholder: '' // focus: true

      });
    }
  }
});