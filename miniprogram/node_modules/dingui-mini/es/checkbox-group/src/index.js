"use strict";

Component({
  mixins: [],
  data: {
    $uiName: 'checkbox-group',
    checkboxListsData: []
  },
  props: {
    className: '',
    checkboxLists: [],
    checkboxListsId: '',
    defaultValue: [],
    disabled: '',
    value: [],
    onDmChange: function onDmChange() {}
  },
  didMount: function didMount() {
    this.initData();
  },
  didUpdate: function didUpdate(preProps) {
    var _this$props = this.props,
        checkboxListsId = _this$props.checkboxListsId,
        defaultValue = _this$props.defaultValue,
        value = _this$props.value;

    if (checkboxListsId !== preProps.checkboxListsId || defaultValue !== preProps.defaultValue || value !== preProps.value) {
      this.initData();
    }
  },
  didUnmount: function didUnmount() {},
  methods: {
    initData: function initData() {
      var _this$props2 = this.props,
          checkboxLists = _this$props2.checkboxLists,
          defaultValue = _this$props2.defaultValue,
          value = _this$props2.value;

      if (!checkboxLists.length) {
        return;
      } // 首选 value ，次选 defaultValue


      var currVal = [];

      if (value && value.length) {
        currVal = value;
      } else if (defaultValue && defaultValue.length) {
        currVal = defaultValue;
      }

      checkboxLists.forEach(function (item) {
        if (currVal.indexOf(item.value) !== -1) {
          item.isChecked = true;
        } else {
          item.isChecked = false;
        }
      });
      this.setData({
        checkboxListsData: checkboxLists
      });
    },
    onDmChange: function onDmChange(data, index, t) {
      var disabled = this.props.disabled;
      var currData = this.data.checkboxListsData || []; // 如果是禁用状态

      if (disabled || currData[index].disabled) {
        return;
      }

      currData[index].isChecked = !currData[index].isChecked;
      var currVal = [];
      currData.forEach(function (item) {
        item.isChecked && currVal.push(item.value);
      });
      this.setData({
        checkboxListsData: currData
      });
      this.props.onDmChange(currVal, currData[index].value, index, data, t, this);
    }
  }
});