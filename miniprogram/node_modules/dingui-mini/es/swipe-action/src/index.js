"use strict";

Component({
  data: {
    X: null,
    Y: null,
    leftPos: 0,
    swiping: false
  },
  props: {
    className: '',
    right: [],
    restore: false,
    index: null
  },
  didUpdate: function didUpdate(prevProps, prevData) {},
  methods: {
    onDmSwipeTap: function onDmSwipeTap(e) {
      if (!this.data.swiping) {
        this.setData({
          leftPos: 0,
          swiping: false
        });
      }
    },
    onDmSwipeStart: function onDmSwipeStart(e) {
      var _this = this;

      this.width = 0;
      this.props.right.map(function (e) {
        _this.width += e.width && Number(e.width) ? Number(e.width) : 50;
        return false;
      });
      this.setData({
        X: e.touches[0].pageX,
        Y: e.touches[0].pageY
      });
      var _this$props = this.props,
          index = _this$props.index,
          onDmSwipeStart = _this$props.onDmSwipeStart;

      if (onDmSwipeStart) {
        onDmSwipeStart({
          index: index
        });
      }
    },
    onDmSwipeMove: function onDmSwipeMove(e) {
      var leftPos = this.data.leftPos; // 滑动距离

      var direction = e.touches[0].pageX - this.data.X;
      var directionY = e.touches[0].pageY - this.data.Y;

      if (Math.abs(direction) >= Math.abs(directionY) && Math.abs(directionY) <= 30) {
        var newLeftPos = leftPos; // 左划

        if (direction < 0) {
          newLeftPos = Math.max(direction, -this.width); // 右划
        } else {
          newLeftPos = 0;
        }

        this.setData({
          leftPos: newLeftPos * 2,
          swiping: direction < -10
        });
      }
    },
    onDmSwipeEnd: function onDmSwipeEnd(e) {
      var leftPos = this.data.leftPos;
      var direction = e.changedTouches[0].pageX - this.data.X;
      var newLeftPos = leftPos;

      if (direction < 0) {
        if (Math.abs(direction + leftPos) > this.width * 0.7) {
          newLeftPos = -this.width;
        } else {
          newLeftPos = 0;
        }
      } else {
        newLeftPos = 0;
      }

      this.setData({
        leftPos: newLeftPos * 2,
        swiping: false,
        X: null,
        Y: null
      });
    },
    onDmItemClick: function onDmItemClick(e) {
      var _this2 = this;

      var onDmRightClick = this.props.onDmRightClick;

      if (onDmRightClick) {
        var index = e.target.dataset.index;
        onDmRightClick({
          index: index,
          extra: this.props.extra,
          detail: this.props.right[index]
        });
      }

      if (!this.data.swiping) {
        setTimeout(function () {
          _this2.setData({
            leftPos: 0,
            swiping: false
          });
        }, 300);
      }
    }
  }
});