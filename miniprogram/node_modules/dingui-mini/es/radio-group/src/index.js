"use strict";

Component({
  mixins: [],
  data: {
    $uiName: 'radio-group',
    radioListsData: [],
    disabledChecked: false
  },
  props: {
    className: '',
    radioLists: [],
    radioListsId: '',
    defaultValue: '',
    disabled: '',
    value: '',
    hasArrowIcon: false,
    onDmChange: function onDmChange() {},
    onDmExtraClick: function onDmExtraClick() {}
  },
  didMount: function didMount() {
    this.initData();
  },
  didUpdate: function didUpdate(preProps) {
    var _this$props = this.props,
        radioListsId = _this$props.radioListsId,
        defaultValue = _this$props.defaultValue,
        value = _this$props.value;

    if (preProps.radioListsId !== radioListsId || defaultValue !== preProps.defaultValue || value !== preProps.value) {
      this.initData();
    }
  },
  didUnmount: function didUnmount() {},
  methods: {
    initData: function initData() {
      var _this$props2 = this.props,
          radioLists = _this$props2.radioLists,
          defaultValue = _this$props2.defaultValue,
          value = _this$props2.value;

      if (!radioLists.length) {
        return;
      } // 如果没有被选中的，先和 defaultValue 比较看有没有默认被选中的，如果都没有没有则选中第一个


      var checkedLists = radioLists.filter(function (item) {
        item.isChecked = false;
        return item.value === (value || defaultValue);
      });

      if (checkedLists.length) {
        checkedLists[0].isChecked = true;
      } else {
        radioLists[0].isChecked = true;
        checkedLists = radioLists[0];
      }

      this.setData({
        radioListsData: radioLists
      });
    },
    onDmChange: function onDmChange(data, index, t) {
      var disabled = this.props.disabled;
      var currData = this.data.radioListsData;

      if (disabled || currData[index].disabled || currData[index].isChecked) {
        return;
      }

      currData.forEach(function (item, idx) {
        if (index === idx) {
          item.isChecked = !item.isChecked;
        } else {
          item.isChecked = false;
        }
      });
      this.setData({
        radioListsData: currData
      });
      this.props.onDmChange(currData[index].value, index, data, t, this);
    },
    onDmExtraClick: function onDmExtraClick(data, index, t) {
      this.props.onDmExtraClick && this.props.onDmExtraClick(this.props.radioLists[index].value, index, data, t, this);
    }
  }
});