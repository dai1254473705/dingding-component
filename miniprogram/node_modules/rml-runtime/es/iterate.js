import _typeof from 'babel-runtime/helpers/typeof';
var isArray = Array.isArray;

export default function iterate(items, fn) {
  var ret = null;
  if (items) {
    ret = [];
    if (isArray(items)) {
      ret = items.map(fn);
    } else if (typeof items === 'number') {
      for (var i = 0; i < items; i++) {
        ret.push(fn(i + 1, i));
      }
    } else if ((typeof items === 'undefined' ? 'undefined' : _typeof(items)) === 'object') {
      Object.keys(items).forEach(function (key) {
        ret.push(fn(items(key), key));
      });
    }
  }
  return ret;
}